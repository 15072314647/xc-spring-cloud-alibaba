server:
  port: 8021
        
# Nacos registry address   
dubbo:
  scan:
    base-packages: com.xc.service.impl
  application:
#    name: dubbo-xc-service
    qos:
      enable: false
  registry:
#   The Spring Cloud Dubbo's registry extension
    address: spring-cloud://localhost
#  registries:
#    registry1:
#        address: spring-cloud://localhost
#        retries: 0
        #?namespace=cbe53515-f2ac-4ce1-bf54-c3fd9259a1da   #nacos://127.0.0.1:8848
    #    parameters[a]: bb
      #  address: nacos://127.0.0.1:8848
   # group: DEV-GROUP
  provider: 
    timeout: 10000
    retries: 1
  protocol:
#    host: ${PROTOCOLHOST}       #用于多网卡时指定IP，要不然集群会有问题
    name: dubbo
    port: ${PROTOCOL_PORT:-1}
  cloud:
    subscribed-services:  ${spring.application.name}

   
spring:
#  application:
#    name: xc-service
  cloud:
    nacos:
      discovery:
        server-addr: ${spring.cloud.nacos.config.server-addr}
        ip: ${NACOS_REGIST_IP:}
    sentinel: 
      enabled: true
      eager: false
#      transport: 
#        dashboard: 127.0.0.1:8088
      datasource:
        ds1:
          nacos: 
            ruleType: flow
            server-addr: ${spring.cloud.nacos.config.server-addr}
            dataId: dubbo-sentinel-json
            groupId: DEFAULT_GROUP
    inetutils:
      preferred-networks: ${spring.networks:}
              
  datasource:
        url: jdbc:postgresql://${SQL_HOST:127.0.0.1}:${SQL_PORT:5432}/dbxc?autoReconnect=true
        username: ${SQL_USERNAME:postgres}
        password: ${SQL_PASSWORD:www21cncom}
        driverClassName: org.postgresql.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        initialSize: 5
        minIdle: 5
        maxActive: 50
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        filters: stat,wall,log4j
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
  jpa: 
      database: POSTGRESQL
      show-sql: true
      properties:
        hibernate.temp.use_jdbc_metadata_defaults: false
        hibernate.hbm2ddl.auto: update  #validate update
        hibernate.dialect: com.xc.util.JSONBPostgreSQLDialect
        hibernate.cache.use_second_level_cache: true
        hibernate.cache.use_query_cache: true
        hibernate.generate_statistics: true
        hibernate.enable_lazy_load_no_trans: true #开启懒加载的，但有问题暂未处理
        hibernate.cache.region.factory_class: org.apache.ignite.cache.hibernate.HibernateRegionFactory
        hibernate.org.apache.ignite.hibernate.ignite_instance_name: hibernate-grid
        hibernate.org.apache.ignite.hibernate.default_access_type: TRANSACTIONAL
        hibernate.connection.release_mode: on_close
        javax.persistence.sharedCache.mode: ENABLE_SELECTIVE
        org.apache.ignite.hibernate.ignite_instance_name: hibernate-grid
        org.apache.ignite.hibernate.grid_config: ${xc.ignite.config:xc-service-ignite.xml}
        #http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=applicationContext-ignite.xml&group=DEFAULT_GROUP    
        
           
##请求和响应GZIP压缩支持
#feign:
#  httpclient:
#    enabled: false
#  okhttp:
#    enabled: true
#  compression:
#    request:
#      enabled: true
#      mime-types: text/xml,application/xml,application/json
#      min-request-size: 1
#    response:
#      enabled: true   


jwt:
  expire: 2880
  rsa-secret: xc-service-password
        